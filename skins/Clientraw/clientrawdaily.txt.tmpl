#*
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

###############################################################################
#                                                                             #
#                          clientrawdaily.txt Template                        #
#                                                                             #
# Version: 0.1.0                                         Date: xx xxxxx 2021  #
#                                                                             #
###############################################################################
*#
##Setup format strings
##
#set $hourFormat = "%H"
#set $minuteFormat = "%M"
#set $dayFormat = "%d"
#set $monthFormat = "%m"
##
##End Setup format strings
##
##Cache tagged stats required in clientraw
##
#set $rainYearmonthlyArray = $yearmonthly.rain.sumQuery
#set $outTempMonthdailyMaxArray = $monthdaily.outTemp.maxQuery
#set $outTempMonthdailyMinArray = $monthdaily.outTemp.minQuery
#set $rainMonthdailyArray = $monthdaily.rain.sumQuery
#set $barometerMonthdailyArray = $monthdaily.barometer.avgQuery
## CHECK ME - should this be windSpeed or wind, was wind
#set $windSpeedMonthdailyArray = $monthdaily.windSpeed.avgQuery
## CHECK ME - should this be windSpeed or wind, was wind
#set $windMonthdailyVecdirArray = $monthdaily.wind.vecdirQuery
#set $outHumidityMonthdailyArray = $monthdaily.outHumidity.avgQuery
#set $outTempSixhourArray = $sixhour.outTemp.avgQuery
#set $barometerSixhourArray = $sixhour.barometer.avgQuery
#set $outHumiditySixhourArray = $sixhour.outHumidity.avgQuery
#set $windSixhourVecdirArray = $sixhour.windDir.avgQuery
#set $windSpeedSixhourArray = $sixhour.windSpeed.avgQuery
#set $radiationSixhourArray = $sixhour.radiation.avgQuery
#set $UVSixhourArray = $sixhour.UV.avgQuery
#set $inTempSixhourArray = $sixhour.inTemp.avgQuery
##
##End Cache tagged stats required in clientraw
##
##
##Assign monthly rain totals to correct month
##
#set $moY = int($current.dateTime.format($monthFormat))
#set $rainJan = rainYearmonthlyArray[(13-$moY)%12].mm.toString($NONE_string="0.0", $localize=False)
#set $rainFeb = rainYearmonthlyArray[(14-$moY)%12].mm.toString($NONE_string="0.0", $localize=False)
#set $rainMar = rainYearmonthlyArray[(15-$moY)%12].mm.toString($NONE_string="0.0", $localize=False)
#set $rainApr = rainYearmonthlyArray[(16-$moY)%12].mm.toString($NONE_string="0.0", $localize=False)
#set $rainMay = rainYearmonthlyArray[(17-$moY)%12].mm.toString($NONE_string="0.0", $localize=False)
#set $rainJun = rainYearmonthlyArray[(18-$moY)%12].mm.toString($NONE_string="0.0", $localize=False)
#set $rainJul = rainYearmonthlyArray[(19-$moY)%12].mm.toString($NONE_string="0.0", $localize=False)
#set $rainAug = rainYearmonthlyArray[(20-$moY)%12].mm.toString($NONE_string="0.0", $localize=False)
#set $rainSep = rainYearmonthlyArray[(21-$moY)%12].mm.toString($NONE_string="0.0", $localize=False)
#set $rainOct = rainYearmonthlyArray[(22-$moY)%12].mm.toString($NONE_string="0.0", $localize=False)
#set $rainNov = rainYearmonthlyArray[(23-$moY)%12].mm.toString($NONE_string="0.0", $localize=False)
#set $rainDec = rainYearmonthlyArray[(12-$moY)%12].mm.toString($NONE_string="0.0", $localize=False)
##
##End assign monthly rain totals to correct month
##
#*WD|000*#12345 #slurp
#*WD|001*##*Previous 31 days max Temperature Readings. Day 1=31 days ago, Day31=yesterday*##slurp
#for $i in range (31):
#try
$outTempMonthdailyMaxArray[$i].degree_C.toString($addLabel=False, $localize=False) #slurp
#except
0 #slurp
#end try
#end for
#*WD|032*##*Previous 31 days min Temperature Readings. Day 1=31 days ago, Day31=yesterday*##slurp
#for $i in range (31):
#try
$outTempMonthdailyMinArray[$i].degree_C.toString($addLabel=False, $localize=False) #slurp
#except
0 #slurp
#end try
#end for
#*WD|063*##*Previous 31 days rainfall Readings. Day 1=31 days ago, Day31=yesterday*##slurp
#for $i in range (31):
#try
$rainMonthdailyArray[$i].mm.toString($addLabel=False, $localize=False) #slurp
#except
0 #slurp
#end try
#end for
#*WD|094*##*Previous 31 days barometer Readings. Day 1=31 days ago, Day31=yesterday*##slurp
#for $i in range (31):
#try
$barometerMonthdailyArray[$i].hPa.toString($addLabel=False, $localize=False) #slurp
#except
0 #slurp
#end try
#end for
#*WD|125*##*Previous 31 days avg windSpeed Readings. Day 1=31 days ago, Day31=yesterday*##slurp
#for $i in range (31):
#try
$windSpeedMonthdailyArray[$i].knot.toString($addLabel=False, $localize=False) #slurp
#except
0 #slurp
#end try
#end for
#*WD|156*##*Previous 31 days wind direction Readings. Day 1=31 days ago, Day31=yesterday*##slurp
#for $i in range (31):
#try
$windMonthdailyVecdirArray[$i].toString($addLabel=False, $localize=False) #slurp
#except
0 #slurp
#end try
#end for
#*WD|187*#$rainJan #slurp
#*WD|188*#$rainFeb #slurp
#*WD|189*#$rainMar #slurp
#*WD|190*#$rainApr #slurp
#*WD|191*#$rainMay #slurp
#*WD|192*#$rainJun #slurp
#*WD|193*#$rainJul #slurp
#*WD|194*#$rainAug #slurp
#*WD|195*#$rainSep #slurp
#*WD|196*#$rainOct #slurp
#*WD|197*#$rainNov #slurp
#*WD|198*#$rainDec #slurp
#*WD|199*##*Previous 31 days outHumidity Readings. Day 1=31 days ago, Day31=yesterday*##slurp
#for $i in range (31):
#try
$outHumidityMonthdailyArray[$i].toString($addLabel=False, $localize=False) #slurp
#except
0 #slurp
#end try
#end for
#*WD|230*#$current.dateTime.format($hourFormat) #slurp
#*WD|231*#$current.dateTime.format($minuteFormat) #slurp
#*WD|232*#$current.dateTime.format($dayFormat) #slurp
#*WD|233*##*Previous 7 days of 6 hourly Temperature Readings. Day 1 #1=7 days ago, Day 7 #4=now*##slurp
#for $i in range(28)
#try
$outTempSixhourArray[$i].toString($addLabel=False, $localize=False) #slurp
#except
0 #slurp
#end try
#end for
#*WD|261*##*Previous 7 days of 6 hourly Barometer Readings. Day 1 #1=7 days ago, Day 7 #4=now*##slurp
#for $i in range(28)
#try
$barometerSixhourArray[$i].toString($addLabel=False, $localize=False) #slurp
#except
0 #slurp
#end try
#end for
#*WD|289*##*Previous 7 days of 6 hourly Humidity Readings. Day 1 #1=7 days ago, Day 7 #4=now*##slurp
#for $i in range(28)
#try
$outHumiditySixhourArray[$i].toString($addLabel=False, $localize=False) #slurp
#except
0 #slurp
#end try
#end for
#*WD|317*##*Previous 7 days of 6 hourly wind direction Readings. Day 1 #1=7 days ago, Day 7 #4=now*##slurp
#for $i in range(28)
#try
$windSixhourVecdirArray[$i].toString($addLabel=False, $localize=False) #slurp
#except
0 #slurp
#end try
#end for
#*WD|345*##*Previous 7 days of 6 hourly Wind Speed Readings. Day 1 #1=7 days ago, Day 7 #4=now*##slurp
#for $i in range(28)
#try
$windSpeedSixhourArray[$i].toString($addLabel=False, $localize=False) #slurp
#except
0 #slurp
#end try
#end for
#*WD|373*##*Previous 7 days of 6 hourly Radiation Readings. Day 1 #1=7 days ago, Day 7 #4=now*##slurp
#for $i in range(28)
#try
$radiationSixhourArray[$i].toString($addLabel=False, $localize=False) #slurp
#except
0 #slurp
#end try
#end for
#*WD|401*##*Previous 7 days of 6 hourly UV Readings. Day 1 #1=7 days ago, Day 7 #4=now*##slurp
#for $i in range(28)
#try
$UVSixhourArray[$i].toString($localize=False) #slurp
#except
0 #slurp
#end try
#end for
#*WD|429*#0 #slurp
#if $rainfall_man_avg_exists
#*WD|430*#$jan_rain_man_avg.mm.toString($addLabel=False, $localize=False) #slurp
#*WD|431*#$feb_rain_man_avg.mm.toString($addLabel=False, $localize=False) #slurp
#*WD|432*#$mar_rain_man_avg.mm.toString($addLabel=False, $localize=False) #slurp
#*WD|433*#$apr_rain_man_avg.mm.toString($addLabel=False, $localize=False) #slurp
#*WD|434*#$may_rain_man_avg.mm.toString($addLabel=False, $localize=False) #slurp
#*WD|435*#$jun_rain_man_avg.mm.toString($addLabel=False, $localize=False) #slurp
#*WD|436*#$jul_rain_man_avg.mm.toString($addLabel=False, $localize=False) #slurp
#*WD|437*#$aug_rain_man_avg.mm.toString($addLabel=False, $localize=False) #slurp
#*WD|438*#$sep_rain_man_avg.mm.toString($addLabel=False, $localize=False) #slurp
#*WD|439*#$oct_rain_man_avg.mm.toString($addLabel=False, $localize=False) #slurp
#*WD|440*#$nov_rain_man_avg.mm.toString($addLabel=False, $localize=False) #slurp
#*WD|441*#$dec_rain_man_avg.mm.toString($addLabel=False, $localize=False) #slurp
#else
#*WD|430*#$avrainjan.mm.toString($addLabel=False, $localize=False) #slurp
#*WD|431*#$avrainfeb.mm.toString($addLabel=False, $localize=False) #slurp
#*WD|432*#$avrainmay.mm.toString($addLabel=False, $localize=False) #slurp
#*WD|433*#$avrainapr.mm.toString($addLabel=False, $localize=False) #slurp
#*WD|434*#$avrainmay.mm.toString($addLabel=False, $localize=False) #slurp
#*WD|435*#$avrainjun.mm.toString($addLabel=False, $localize=False) #slurp
#*WD|436*#$avrainjul.mm.toString($addLabel=False, $localize=False) #slurp
#*WD|437*#$avrainaug.mm.toString($addLabel=False, $localize=False) #slurp
#*WD|438*#$avrainsep.mm.toString($addLabel=False, $localize=False) #slurp
#*WD|439*#$avrainoct.mm.toString($addLabel=False, $localize=False) #slurp
#*WD|440*#$avrainnov.mm.toString($addLabel=False, $localize=False) #slurp
#*WD|441*#$avraindec.mm.toString($addLabel=False, $localize=False) #slurp
#end if
#*WD|442*##*Previous 7 days of 6 hourly Indoor Temperature Readings. Day 1 #1=7 days ago, Day 7 #4=now*##slurp
#for $i in range(28)
#try
$inTempSixhourArray[$i].toString($addLabel=False, $localize=False) #slurp
#except
0 #slurp
#end try
#end for
#*WD|470*#!!EOR!! #slurp